1. DESCRIPTION
Kameleon is a behavior-rich and time-aware generic simulator. This server,
implemented in Python, handles ordinary clients through a TCP/IP connection.
An instance of such client could be an IOC.

Kameleon uses an user-defined file that describes the commands received from a
client and, optionally, the reaction to these through statuses sent back to the
client. Please check file "kameleon.template" to get a good starting base to
define commands and statuses, as well as an extensive explanation about these.


2. FEATURES
The main features of Kameleon are the following:

   - Ubiquitous (runs in disparate platforms such as Windows and Linux).
   - Behavior-rich:
         - FIXED (sends a fixed value to the client).
         - ENUM (sends a value - belonging to an enumeration - to the client).
         - INCR (sends an incremented value to the client).
         - RANDOM (sends a random value to the client).
         - CUSTOM (sends a value to the client from an user-custom function).
   - Time-aware (a status can be sent to the client either event-based - i.e.
     whenever a certain command is received - or time-based - i.e. after a
     certain elapsed time).
   - Flexible (commands and statuses are described in a simple user-defined
     file - nothing is hard-coded in Kameleon).


3. DEPENDENCIES
To run Kameleon, a Python interpreter must be installed first. If there is
none installed in the machine, download one from http://www.python.org/download
and install it.


4. EXECUTION
To run Kameleon, just open a terminal ("cmd" if in Windows or "xterm" if in
Linux/Mac OS X) and execute the following:

   python kameleon.py

This will make Kameleon listen for incoming clients at (default) port 9999. To
see all valid parameters accepted by it, just execute:

   python kameleon.py -help


5. SUPPORT
Please contact ricardo.fernandes@esss.se in case a bug is found or a feature
is missing in Kameleon.

